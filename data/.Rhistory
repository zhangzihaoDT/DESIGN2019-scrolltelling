my_data$source <- do.call(paste0, c(my_data$departure_lat,my_data$departure_lng, sep=","))
my_data$source <- do.call(paste0, c(df[c("departure_lat", "departure_lng")], sep=","))
my_data$source <- do.call(paste0, c(my_data[c("departure_lat", "departure_lng")], sep=","))
View(my_data)
my_data$source <- do.call(paste0, c(my_data[c("departure_lat", "departure_lng")], sep="-"))
View(my_data)
my_data$source <- transform(my_data,my_data$source=interaction(departure_lat,departure_lng,sep=','))
transform(my_data,my_data$source=interaction(departure_lat,departure_lng,sep=','))
library(dplyr)
my_data %>%
mutate(my_data$source_char = paste0(departure_lat, departure_lng)) %>%
mutate(my_data$source_num = as.numeric(paste0(departure_lat, departure_lng)))
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(tidyr)
my_data %>%
unite(mu_data$source, departure_lat:departure_lng, sep = ',', remove = FALSE)
my_data$NewCol <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
View(my_data)
summary(my_data)
#CSV转JSON
install.packages('jsonlite')
install.packages("jsonlite")
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE)
writeLines(json_data, "my_data.json")
as.vector(my_data$source)
my_data$source <- as.vector(my_data$source)
summary(my_data)
my_data$source <- as.vector(my_data$source)
summary(my_data)
my_data$source <- as.matrix(my_data$source)
summary(my_data)
View(my_data)
head(my_data)
head(mmy_data$source)
head(my_data$source)
head(my_data$source)
#CSV转JSON
install.packages('jsonlite')
install.packages("jsonlite")
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE)
writeLines(json_data, "my_data.json")
my_data$target <- do.call(paste, c(my_data[c(arrival_lat, arrival_lng)], sep = ","))
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
my_data$source <- as.matrix(as.numeric(my_data$source))
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(dplyr)
my_data %>%
mutate(xyz_char = paste0(departure_lat, departure_lng)) %>%
mutate(xyz_num = as.numeric(paste0(departure_lat, departure_lng)))
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
my_data$source <- as.matrix(my_data$source)
head(my_data$source)
my_data$source <- noquote(as.matrix(my_data$source))
head(my_data$source)
my_data$target <- noquote(as.matrix(my_data$target))
head(my_data$source)
#CSV转JSON
install.packages('jsonlite')
install.packages("jsonlite")
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE)
writeLines(json_data, "my_data.json")
dimnames(my_data$source)
head(my_data$source)
View(my_data)
head(my_data$source)
#CSV转JSON
install.packages('jsonlite')
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
my_data$source <- noquote(as.matrix(my_data$source))
head(my_data$source)
json_data <- toJSON(my_data, pretty = TRUE)
json_data <- toJSON(my_data, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
json_data <- toJSON(my_data,force=TRUE)
writeLines(json_data, "my_data.json")
json_data <- toJSON(my_data, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
class(my_data$source) <- "numeric"
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
storage.mode(my_data$source) <- "numeric"
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
summary(my_data)
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
head(my_data)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
library(jsonlite)
json_data <- toJSON(my_data, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,16:17)] <- sapply(my_data[, c(6:11,16:17)], as.numeric)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
storage.mode(my_data$source) <- "numeric"
my_data$source <- noquote(as.matrix(my_data$source))
head(my_data$source)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
storage.mode(my_data$source) <- "numeric"
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
my_data$source <- do.call(paste, c(my_data[c("departure_lat", "departure_lng")], sep = ","))
my_data$target <- do.call(paste, c(my_data[c("arrival_lat", "arrival_lng")], sep = ","))
summary(my_data)
my_data$source <- noquote(as.matrix(my_data$source))
head(my_data$source)
my_data$source
json_data <- toJSON(my_data$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
my_data$source <- as.matrix(noquote(my_data$source))
head(my_data$source)
my_data$source
json_data <- toJSON(my_data$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
library(readr)
library(dplyr)
install.packages('readr')
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("'source':[%f,%f]",departure_lat,departure_lng),
target=sprintf("'target':[%f,%f]",arrival_lat,arrival_lng))
View(shuju)
summary(shuju)
library(jsonlite)
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju[,c('source','target')]
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng))
library(jsonlite)
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju$source <- as.numeric(shuju$source)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
install.packages('readr')
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng))
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng,quote=FALSE),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng,quote=FALSE))
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng))
library(jsonlite)
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju$source <- as.factor(shuju$source)
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju$source <- as.numeric(shuju$source)
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
View(shuju)
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng))
shuju$source <- as.numeric(shuju$source)
shuju<-my_data %>% mutate(source=sprintf("[%f,%f]",departure_lat,departure_lng),
target=sprintf("[%f,%f]",arrival_lat,arrival_lng))
shuju<-my_data %>% mutate(source=sprintf("[%s,%s]",departure_lat,departure_lng),
target=sprintf("[%s,%s]",arrival_lat,arrival_lng))
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
summary(shuju)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%s,%s]",departure_lat,departure_lng),
target=sprintf("[%s,%s]",arrival_lat,arrival_lng))
summary(shuju)
as.matrix(shuju$source)
shuju$source <- as.matrix(shuju$source)
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju$source <- as.factor(shuju$source)
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju$source <- as.numeric(shuju$source)
json_data <- toJSON(shuju$source, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
shuju<-my_data %>% mutate(source=sprintf("[%s,%s]",departure_lat,departure_lng),
target=sprintf("[%s,%s]",arrival_lat,arrival_lng))
summary(shuju)
View(shuju)
#导出CSV
write.csv(shuju,file="my_data.csv",quote=F,row.names = F)
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
json_data <- toJSON(my_data, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%s,%s]",departure_lat,departure_lng),
target=sprintf("[%s,%s]",arrival_lat,arrival_lng))
summary(shuju)
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
# 首先找出工作目录的设置位置：
getwd()
#更改返回的路径
setwd("/Users/smg/Desktop/volat-economy-scrollmagic/data/")
my_data <- read.csv("Airline&Centrality_逆向匹配.csv",encoding ="UTF-8",stringsAsFactors = FALSE,header = T)
summary(my_data)
#去除NA
my_data[my_data == "#N/A"]  <- NA
my_data <- na.omit(my_data)
summary(my_data)
#character转numeric
#my_data$flights_in <- as.numeric(as.character(my_data$flights_in))
my_data[, c(6:11,13)] <- sapply(my_data[, c(6:11,13)], as.numeric)
summary(my_data)
library(readr)
library(dplyr)
shuju<-my_data %>% mutate(source=sprintf("[%s,%s]",departure_lng,departure_lat),
target=sprintf("[%s,%s]",arrival_lng,arrival_lat))
summary(shuju)
#CSV转JSON
install.packages('jsonlite')
library(jsonlite)
json_data <- toJSON(shuju, pretty = TRUE,force=TRUE)
writeLines(json_data, "my_data.json")
